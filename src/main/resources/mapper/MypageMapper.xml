<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.market.repository.mybatis.myPage.MyPageMapper">
    <!-- user Info Edit -->
    <update id="update_pwd">
        update member set pwd =#{edit_pwd} where id =#{user_id};
    </update>
    <update id="update_addr">
        update member set addr =#{edit_addr} where id =#{user_id};
    </update>
    <update id="update_email">
        update member set email =#{edit_email} where id =#{user_id};
    </update>
    <update id="update_tel">
        update member set phone =#{edit_tel} where id =#{user_id};
    </update>

    <delete id="del_review">
        delete from shop_review where id = #{review_id};
    </delete>
    <delete id="del_qna">
        delete from shop_qna where id = #{qna_id};
    </delete>
    <select id="select_lengthShopQna" resultType="Integer">
        select count(*)
        from shop_qna
        where user_id=${user_id}
        <if test="!artist_id.equals(0)">
            and artist_id = #{artist_id}
        </if>
        ;
    </select>
    <select id="select_lengthShopReview" resultType="Integer">
        select count(*)
        from shop_review
        where user_id=${user_id}
        <if test="!artist_id.equals(0)">
            and artist_id = #{artist_id}
        </if>;
    </select>
    <select id="select_searchReview" resultType="Artist">
        select  art.id, art.name
        from(
            select artist_id
            from shop_review
            where user_id = #{user_id}) sr
        inner join artist art on sr.artist_id = art.id
        group by artist_id;
    </select>
    <select id="select_searchQna" resultType="Artist">
        select  art.id, art.name
        from(
            select artist_id
            from shop_qna
            where user_id = 1) sq
        inner join artist art on sq.artist_id = art.id
        group by artist_id;
    </select>
    <select id="select_shopQna" resultType="ShopQna">
        select num id,
            tmp2.id writer_num,
            pa.title title,
            tmp2.date date,
            tmp2.content content,
            pa.artist_id artist_id,
            answer_check answerCheck,
            aq.qna_id rootId,
            aq.content rootContent,
            aq.date rootDate
        from(select *
            from(select row_number() over(order by date desc) num,
                    id,
                    artist_id,
                    date,
                    content,
                    product_no,
                    answer_check
                from shop_qna
                where user_id=#{user_id}
                <if test="!artist_id.equals(0)">
                    and artist_id = #{artist_id}
                </if>
                )tmp
        where num > #{page_limit})tmp2
        inner join product_artist pa on pa.id = tmp2.product_no
        left join answer_qna aq on aq.qna_id = tmp2.id
        order by num asc limit 10;
    </select>
    <select id="select_shopReview" resultType="ShopReview">
        select num,
            tmp2.id,
            pa.title,
            tmp2.url,
            tmp2.date,
            tmp2.content,
            pa.artist_id
        from(select *
            from(select row_number() over(order by date desc) num,
                    id,
                    artist_id,
                    url,
                    date,
                    content,
                    product_no
                from shop_review
                where user_id=#{user_id}
                <if test="!artist_id.equals(0)">
                    and artist_id = #{artist_id}
                </if>
            )tmp
        where num > #{page_limit})tmp2
        inner join product_artist pa on pa.id = tmp2.product_no
        order by num asc limit 10;
    </select>
    <select id="select_deliveryStatus" resultType="DeliveryStatus_manual">
        select max(dsm_id) dsmId, max(deliveryStatus) dsmName, count(ds_num) dsmCount
        from(select dsm.id dsm_id, dsm.name deliveryStatus, ds_num
            from (select json_unquote(json_extract(delivery_status,concat("$.",json_key,"[2]"))) ds_num
                from purchase,json_table(json_keys(delivery_status), "$[*]" columns(
                json_key varchar(30) path "$"
            ))t
        where user_id = #{user_id})tmp
        right outer join DeliveryStatus_manual dsm on tmp.ds_num = dsm.id)tmp2
        group by dsm_id;
    </select>
    <select id="select_purchaseLists" resultType="Purchase_list">
        select 	ol.num,
            pa.title,
            ol.goods_quantity quantity,
            ol.purchase_date purchaseDate,
            json_unquote(json_extract(option_size,concat("$.option[",ol.option_no,"][0]"))) optionTitle,
            purchase_status purchaseStatus,
            total_price totalPrice
        from(
            select
                DENSE_RANK() over(order by purchase_date desc) num,
                purchase_date,
                SUBSTRING_INDEX(goods_key,"x",1) as single_multiple,
                SUBSTRING_INDEX(SUBSTRING_INDEX(goods_key,"x",2),"x",-1) as product_no,
                SUBSTRING_INDEX(goods_key,"x",-1) as option_no,
                json_unquote(json_extract(goods_list, concat("$.",goods_key,"[1]"))) goods_date,
                json_unquote(json_extract(goods_list, concat("$.",goods_key,"[0]"))) goods_quantity,
                purchase_status,
                total_price
            from (select
                    substring_index(json_key,"_",-1) purchase_date,
                    json_unquote(json_extract(amount, concat("$.",json_key))) total_price,
                    json_unquote(json_extract(delivery_status,concat("$.",json_key,"[2]"))) purchase_status,
                    json_extract(purchase_list,CONCAT("$.",json_key)) goods_list,
                    purchase_list,
                    json_key
                from purchase,
                    json_table(json_keys(purchase_list),"$[*]" columns(
                        json_key varchar(30) path "$"
                    ))t
                where user_id =#{user_id}) tmp,
            json_table(json_keys(goods_list),"$[*]" columns(
                goods_key varchar(20) path "$"
            ))tmp2
        where purchase_date > #{purchase_date}
        <if test='!purchase_status.equals(0)'>
            and purchase_status = #{purchase_status}
        </if>)ol
        inner join product_artist pa on ol.product_no = pa.id
        order by purchase_date desc;
    </select>
    <select id="select_deliveryAddr" resultType="Complete_deliveryInfo">
        select amount ->> #{purchase_id} purchaseAmount,
        json_unquote(json_extract(delivery_status,CONCAT(#{purchase_id},"[0]"))) deliveryMethod,
        json_unquote(json_extract(delivery_status,CONCAT(#{purchase_id},"[1]"))) deliveryMsg,
        json_unquote(json_extract(delivery_status,CONCAT(#{purchase_id},"[2]"))) deliveryStatus,
        a.*
        from purchase,(
        select firstName, lastName, mainAddr, detailAddr, postNum, tel
        from Purchase, json_table(delivery_list->>#{purchase_id},"$" columns(
        firstName varchar(20) PATH '$.first_name',
        lastName varchar(100) PATH '$.last_name',
        mainAddr varchar(50) PATH '$.main_addr',
        detailAddr varchar(50) PATH '$.detail_addr',
        postNum varchar(50) PATH '$.post_num',
        tel varchar(15) PATH '$.tel'
        ))tmp)a
        where user_id =#{user_id};
    </select>
    <select id="select_purchaseList" resultType="Cart">
        select pa.id productNo,
            pl.quantity,
            pa.title,
            json_unquote(json_extract(option_size,concat("$.option[",pl.option_no,"][0]"))) optionTitle
        from (select json_key, SUBSTRING_INDEX(json_key,"x",1) as single_multiple,
            SUBSTRING_INDEX(SUBSTRING_INDEX(json_key,"x",2),"x",-1) as product_no,
            SUBSTRING_INDEX(json_key,"x",-1) as option_no,
            json_extract(purchase_list,concat(#{purchase_id},".",json_key,'[0]')) quantity
            from Purchase, json_table(JSON_KEYS(purchase_list->> #{purchase_id}),"$[*]" columns(
            json_key varchar(20) PATH "$"
            ))tmp
        where user_id = #{user_id}
        )pl inner join Product_artist pa on pl.product_no = pa.id;
    </select>
</mapper>