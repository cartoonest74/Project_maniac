<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.market.repository.mybatis.shopQna.ShopQnaMapper">

    <insert id="insert">
        insert into Shop_qna(product_no, user_id, content)
        values(#{productNo}, #{writer_num}, #{content})
    </insert>

    <delete id="delete">
        delete from Shop_qna
        where id = #{id}
    </delete>

    <select id="selectLength" resultType="Integer">
        select
        <if test="arg0 != 0">
            count(product_no)
        </if>
        <if test="arg1 != 0">
            count(user_id)
        </if>
        from shop_qna
        <if test="arg0 != 0">
            group by product_no
            having product_no = #{arg0}
        </if>
        <if test="arg1 != 0">
            group by user_id
            having user_id = #{arg1}
        </if>
    </select>

    <select id="selectAll" resultType="ShopQna">
        select
            id,
            productNo,
        writer_num,
            userId,
            content,
            title,
            date,
            answerCheck,
            rootId,
            rootContent,
            rootDate
        from
            (select
                    row_number()over(order by id desc) as no,
                    sq.id as id,
                    pa.title,
                    product_no as productNo,
                    m.id writer_num,
                    m.user_id userId,
                    sq.content content,
                    sq.date date,
                    IFNULL(sq.answer_check,0) as answerCheck,
                    IFNULL(aq.id,0) as rootId,
                    IFNULL(aq.content,"NO") as rootContent,
                    IFNULL(aq.date,"NO") as rootDate
                from shop_qna sq
                inner join member m
                    on m.id = sq.user_id
                inner join Product_artist pa
                    on sq.product_no = pa.id
                left join answer_qna as aq
                    on sq.id = aq.shop_qna_id
                where product_no = #{arg0}) as qna
        where qna.no > #{arg1}
        order by date desc limit 10
    </select>

    <select id="select" resultType="ShopQna">
        select
            id,
            productNo,
            title,
        writer_num,
            userId,
            content,
            date,
            answer_check,
            rootId,
            rootContent,
            rootDate
        from
            (select
                    row_number()over(order by id desc) as no,
                    sq.id as id,
                    pa.title,
                    product_no as productNo,
                    m.id writer_num,
                    m.user_id userId,
                    sq.content content,
                    sq.date date,
                    answer_check,
                    ifnull(aq.id,0) as rootId,
                    ifnull(aq.content,0) as rootContent,
                    ifnull(aq.date,0) as rootDate
                from shop_qna sq
                inner join member m
                    on m.id = sq.user_id
                inner join Product_artist pa
                    on sq.product_no = pa.id
                left join answer_qna aq
                    on sq.id = aq.shop_qna_id
                where product_no = #{arg0} and sq.user_id = #{arg1}) as qna
        where qna.no > #{arg2}
        order by date desc limit 10
    </select>

    <update id="update">

    </update>
</mapper>